import numpy as np

def seidel(A, b, initial_guess, tolerance=0.01, max_iterations=1000):
    n = len(A)
    x = initial_guess
    D = np.diag(np.diag(A))
    L = -np.tril(A, -1)
    U = -np.triu(A, 1)
    T = np.dot(np.linalg.inv(D - L), U)
    C = np.dot(np.linalg.inv(D - L), b)
    
    for _ in range(max_iterations):
        x_new = np.dot(T, x) + C
        if np.linalg.norm(x_new - x) < tolerance:
            return x_new
        x = x_new
    
    return x

A = np.array([[14, -4, -2, 3],
              [-3, 23, -6, -9],
              [-7, -8, 21, -5],
              [2, -2, 8, 18]])
b = np.array([38, -195, -27, 142])

initial_guess = np.zeros(len(A))
solution = seidel(A, b, initial_guess)

print("Решение системы уравнений:")
print(solution)
