#include <iostream>
#include <vector>

// Функция для решения системы линейных уравнений методом прогонки
std::vector<double> solveTridiagonal(std::vector<std::vector<double>> A, std::vector<double> b) {
    int n = A.size();
    std::vector<double> alpha(n), beta(n), x(n);

    alpha[0] = A[0][1] / A[0][0];
    beta[0] = b[0] / A[0][0];

    for (int i = 1; i < n; i++) {
        alpha[i] = A[i][i+1] / (A[i][i] - A[i][i-1] * alpha[i-1]);
        beta[i] = (b[i] + A[i][i-1] * beta[i-1]) / (A[i][i] - A[i][i-1] * alpha[i-1]);
    }

    x[n-1] = beta[n-1];
    for (int i = n - 2; i >= 0; i--) {
        x[i] = alpha[i] * x[i+1] + beta[i];
    }

    return x;
}

int main() {
    std::vector<std::vector<double>> A = {{11, 9, 0, 0, 0},
                                          {1, -8, 1, 0, 0},
                                          {0, -2, -11, 5, 0},
                                          {0, 0, 3, -14, 7},
                                          {0, 0, 0, 8, 10}};
    std::vector<double> b = {-114, 81, -8, -38, 144};

    std::vector<double> x = solveTridiagonal(A, b);

    for (int i = 0; i < x.size(); i++) {
        std::cout << "x" << i+1 << " = " << x[i] << std::endl;
    }

    return 0;
}
