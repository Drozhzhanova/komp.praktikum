import math

# Функция вычисления значения f(x) = 7(x1)^2 + 2x1x2 + 5(x2)^2 + x1 - 10x2
def f(x1, x2):
    return 7 * x1**2 + 2 * x1 * x2 + 5 * x2**2 + x1 - 10 * x2

# Градиент функции f(x)
def gradient(x1, x2):
    gradX1 = 14 * x1 + 2 * x2 + 1
    gradX2 = 2 * x1 + 10 * x2 - 10
    return gradX1, gradX2

# Метод наискорейшего спуска для поиска оптимума функции
def steepestDescent():
    epsilon = 0.0001
    alpha = 0.01
    x1 = 1.0
    x2 = 1.0

    while True:
        gradX1, gradX2 = gradient(x1, x2)

        prevX1 = x1
        prevX2 = x2

        # Обновление x1
        x1 = prevX1 - alpha * gradX1
        # Обновление x2
        x2 = prevX2 - alpha * gradX2

        if math.sqrt(gradX1**2 + gradX2**2) < epsilon:
            break

    print("Оптимальное значение x1:", x1)
    print("Оптимальное значение x2:", x2)
    print("Значение функции в оптимуме:", f(x1, x2))

if __name__ == "__main__":
    steepestDescent()
